name: CICD

on:
  push: 
    branches: 
    - '**'
    - 'main'
    - 'develop'
    
  release:
    types: 
     - created
env:
  IMAGE_NAME: fbiopereira/movies-api-pos-tech-fiap
  #IMAGE_VERSION: $(git rev-parse --short "$GITHUB_SHA")
  #BRANCH_NAME:  ${{ github.ref_name }}
  
jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set Branch Name
        id: vars
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV             
          SHA_SHORT=${{github.sha}}
          echo "SHA_SHORT=${SHA_SHORT:0:7}" >> $GITHUB_ENV
      - name: Set Image Version
        shell: bash
        run: |
          if [ "${BRANCH_NAME}" = "main" ] ; then
            echo "IMAGE_VERSION=hml-${{github.sha}}" >> $GITHUB_ENV
          elif [ "${BRANCH_NAME}" = "develop" ] ; then
            echo "IMAGE_VERSION=develop-${{github.sha}}" >> $GITHUB_ENV
          elif [[ "${BRANCH_NAME}" == feature/* ]] ; then
            echo "IMAGE_VERSION=feature-$SHA_SHORT" >> $GITHUB_ENV          
          elif [[ "${{ github.event_name }}" == "release" ]]; then
             TAG_NAME=${GITHUB_REF#refs/tags/}
              echo "IMAGE_VERSION=$TAG_NAME" >> $GITHUB_ENV              
          fi
        
      - name: EXIBE VERSION
        run: echo ${{env.IMAGE_VERSION}}
    
      - name: Code Checkout
        uses: actions/checkout@v4.1.1    
     
      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}   

      - name: Build and push docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          build-args: |
            "APP_VERSION=${{env.IMAGE_VERSION}}"
            
          file: Dockerfile
          push: true       
          tags: |            
            ${{env.IMAGE_NAME}}:latest
            ${{env.IMAGE_NAME}}:${{env.IMAGE_VERSION}}
            
           
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - name: Azure Login
        uses: Azure/login@v1.4.5
        with:      
          creds: ${{secrets.AZURE_CREDENTIALS}}
      
           

            
          
